{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\Modal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nconst CloseModal = props => {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  useEffect(() => {\n    if (props.open == true) handleShow();\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Modal, {\n    show: show,\n    onHide: props.closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, \"Modal heading\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"Woohoo, you're reading this text in a modal!\"), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: props.closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: props.acceptModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Save Changes\"))));\n};\n\nexport default CloseModal;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/Modal.js"],"names":["React","useState","useEffect","Modal","Button","CloseModal","props","show","setShow","handleClose","handleShow","open","closeModal","acceptModal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMQ,WAAW,GAAG,MAAMD,OAAO,CAAC,KAAD,CAAjC;;AACA,QAAME,UAAU,GAAG,MAAMF,OAAO,CAAC,IAAD,CAAhC;;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAII,KAAK,CAACK,IAAN,IAAc,IAAlB,EAAwBD,UAAU;AACnC,GAFQ,CAAT;AAIA,sBACE,uDACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAEH,IAAb;AAAmB,IAAA,MAAM,EAAED,KAAK,CAACM,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,eAIE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAJF,eAKE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,OAAO,EAAEN,KAAK,CAACM,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEN,KAAK,CAACO,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,CALF,CADF,CADF;AAkBD,CA5BD;;AA8BA,eAAeR,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst CloseModal = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  useEffect(() => {\r\n    if (props.open == true) handleShow();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Modal show={show} onHide={props.closeModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Modal heading</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.closeModal}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={props.acceptModal}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CloseModal;\r\n"]},"metadata":{},"sourceType":"module"}