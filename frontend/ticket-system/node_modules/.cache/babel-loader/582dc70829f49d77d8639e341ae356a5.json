{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\UserIncidents.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./componentsStyles/UserIncidents.css\";\nimport { AuthContext } from \"./AuthContext\";\n\nfunction UserIncidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [error, setError] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\n  const userId = localStorage.getItem(\"user-id\");\n  const token = localStorage.getItem(\"token\"); // Request once to get username base on user id.\n\n  useEffect(() => {\n    alert(\"test\");\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/auth/user\",\n      data: userId,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => setUserName(res.data.name)).catch(err => setError(...error, err.data));\n  }, []); // Request to get the incidents.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/incidents\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => setIncidents(res.data)).catch(err => setError(...error, err.data));\n  }, []); // If user isn't login redirect to login\n\n  if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"user-incidents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"Hello \", userName), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \" Your incidents \"), incidents.map((incident, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \" \", incident.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Description: \", incident.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Status: \", incident.status), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default UserIncidents;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/UserIncidents.js"],"names":["React","useState","useContext","useEffect","axios","Redirect","AuthContext","UserIncidents","incidents","setIncidents","error","setError","userName","setUserName","isAuthenticated","setIsAuthenticated","userId","localStorage","getItem","token","alert","method","url","data","headers","then","res","name","catch","err","map","incident","index","title","description","status"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./componentsStyles/UserIncidents.css\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nfunction UserIncidents() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [error, setError] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n  const userId = localStorage.getItem(\"user-id\");\r\n  const token = localStorage.getItem(\"token\");\r\n  // Request once to get username base on user id.\r\n  useEffect(() => {\r\n    alert(\"test\");\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/auth/user\",\r\n      data: userId,\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => setUserName(res.data.name))\r\n      .catch((err) => setError(...error, err.data));\r\n  }, []);\r\n\r\n  // Request to get the incidents.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/incidents\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => setIncidents(res.data))\r\n      .catch((err) => setError(...error, err.data));\r\n  }, []);\r\n\r\n  // If user isn't login redirect to login\r\n  if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <section className=\"user-incidents\">\r\n      <div className=\"container\">\r\n        <h1>{error}</h1>\r\n        <h1>Hello {userName}</h1>\r\n        <h2> Your incidents </h2>\r\n        {incidents.map((incident, index) => (\r\n          <div key={index} className=\"incident\">\r\n            <strong> {incident.title}</strong>\r\n            <p>Description: {incident.description}</p>\r\n            <p>Status: {incident.status}</p>\r\n            <hr></hr>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserIncidents;\r\n"]},"metadata":{},"sourceType":"module"}