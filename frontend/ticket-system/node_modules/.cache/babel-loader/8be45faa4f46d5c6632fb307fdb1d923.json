{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\UserIncidents.js\";\nimport React, { useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./componentsStyles/UserIncidents.css\";\nimport { AuthContext } from \"./AuthContext\";\n\nfunction UserIncidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [userName, setUserName] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext); // If user isn't login redirect to login\n\n  if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 32\n    }\n  });\n  const userId = localStorage.getItem(\"user-id\");\n  const token = localStorage.getItem(\"token\");\n  axios({\n    method: \"get\",\n    url: \"http://localhost:5000/api/auth/user\",\n    data: userId,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token\n    }\n  }).then(res => setUserName(res.data.name)).catch(err => setError(err.data));\n  axios({\n    method: \"get\",\n    url: \"http://localhost:5000/api/incidents\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token\n    }\n  }).then(res => setIncidents(res.data)).catch(err => setError(err.data));\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"user-incidents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"Hello \", userName), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \" Your incidents \"), incidents.map((incident, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: `incident-${index}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, incident.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, incident.description))));\n}\n\nexport default UserIncidents;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/UserIncidents.js"],"names":["React","useState","useContext","axios","Redirect","AuthContext","UserIncidents","incidents","setIncidents","error","setError","userName","setUserName","isAuthenticated","setIsAuthenticated","userId","localStorage","getItem","token","method","url","data","headers","then","res","name","catch","err","map","incident","index","title","description"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,QAA4B,eAA5B;;AAEA,SAASC,aAAT,GAAyB;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCZ,UAAU,CAACG,WAAD,CAAxD,CAJuB,CAMvB;;AACA,MAAI,CAACQ,eAAL,EAAsB,oBAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEtB,QAAME,MAAM,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAf;AACA,QAAMC,KAAK,GAAGF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAd,EAAAA,KAAK,CAAC;AACJgB,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAE,qCAFD;AAGJC,IAAAA,IAAI,EAAEN,MAHF;AAIJO,IAAAA,OAAO,EAAE;AAAE,sBAAgB,kBAAlB;AAAsC,sBAAgBJ;AAAtD;AAJL,GAAD,CAAL,CAMGK,IANH,CAMSC,GAAD,IAASZ,WAAW,CAACY,GAAG,CAACH,IAAJ,CAASI,IAAV,CAN5B,EAOGC,KAPH,CAOUC,GAAD,IAASjB,QAAQ,CAACiB,GAAG,CAACN,IAAL,CAP1B;AASAlB,EAAAA,KAAK,CAAC;AACJgB,IAAAA,MAAM,EAAE,KADJ;AAEJC,IAAAA,GAAG,EAAE,qCAFD;AAGJE,IAAAA,OAAO,EAAE;AAAE,sBAAgB,kBAAlB;AAAsC,sBAAgBJ;AAAtD;AAHL,GAAD,CAAL,CAKGK,IALH,CAKSC,GAAD,IAAShB,YAAY,CAACgB,GAAG,CAACH,IAAL,CAL7B,EAMGK,KANH,CAMUC,GAAD,IAASjB,QAAQ,CAACiB,GAAG,CAACN,IAAL,CAN1B;AAQA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKZ,KAAL,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWE,QAAX,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIGJ,SAAS,CAACqB,GAAV,CAAc,CAACC,QAAD,EAAWC,KAAX,kBACb;AAAK,IAAA,SAAS,EAAG,YAAWA,KAAM,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBD,QAAQ,CAACE,KAA1B,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,QAAQ,CAACG,WAAb,CAFF,CADD,CAJH,CADF;AAaD;;AAED,eAAe1B,aAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./componentsStyles/UserIncidents.css\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nfunction UserIncidents() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n\r\n  // If user isn't login redirect to login\r\n  if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  const userId = localStorage.getItem(\"user-id\");\r\n  const token = localStorage.getItem(\"token\");\r\n  axios({\r\n    method: \"get\",\r\n    url: \"http://localhost:5000/api/auth/user\",\r\n    data: userId,\r\n    headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n  })\r\n    .then((res) => setUserName(res.data.name))\r\n    .catch((err) => setError(err.data));\r\n\r\n  axios({\r\n    method: \"get\",\r\n    url: \"http://localhost:5000/api/incidents\",\r\n    headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n  })\r\n    .then((res) => setIncidents(res.data))\r\n    .catch((err) => setError(err.data));\r\n\r\n  return (\r\n    <section className=\"user-incidents\">\r\n      <h1>{error}</h1>\r\n      <h1>Hello {userName}</h1>\r\n      <h2> Your incidents </h2>\r\n      {incidents.map((incident, index) => (\r\n        <div className={`incident-${index}`}>\r\n          <li key={index}>{incident.title}</li>\r\n          <p>{incident.description}</p>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserIncidents;\r\n"]},"metadata":{},"sourceType":"module"}