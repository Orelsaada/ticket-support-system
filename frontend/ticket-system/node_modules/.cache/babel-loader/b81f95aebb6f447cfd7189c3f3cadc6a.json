{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\UserIncidents.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./componentsStyles/UserIncidents.css\";\nimport { AuthContext } from \"./AuthContext\";\nimport { UserContext } from \"./UserContext\";\nimport CloseModal from \"./Modal\";\n\nfunction UserIncidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [incidentId, setIncidentId] = useState(\"\");\n  const [error, setError] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\n  const [user, setUser] = useContext(UserContext);\n  const userId = localStorage.getItem(\"user-id\");\n  const token = localStorage.getItem(\"token\"); // Request to get the incidents.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/incidents\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => setIncidents(res.data.reverse())).catch(err => setError(...error, err.data));\n  }, [incidents]); // If user isn't login redirect to login\n\n  if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 32\n    }\n  }); // Remove Incident(Not Used)\n\n  const removeIncident = id => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/api/incidents/delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      },\n      data: {\n        id\n      }\n    }).then(res => {\n      alert(res.data.msg);\n      setIncidents(incidents.filter(incident => incident._id != id));\n    }).catch(err => console.log(err));\n  }; // Close the modal of closing incident.\n\n\n  const closeModal = () => {\n    setShowModal(false);\n  }; // Close incident on modal.\n\n\n  const acceptModal = id => {\n    setShowModal(false);\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/incidents/close\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      },\n      data: {\n        id\n      }\n    }).then(res => {\n      alert(res.data.msg);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"user-incidents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Hello \", user.name || localStorage.getItem(\"user-id\")), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \" Your incidents \"), incidents.map((incident, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  }, \"SD102546(TO-CHANGE)\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: `badge ${incident.status == \"Open\" ? \"badge-success\" : \"badge-danger\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, incident.status), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, `${incident.createdAt.split(\"/\")[1]}/${incident.createdAt.split(\"/\")[0]}/${incident.createdAt.split(\"/\")[2]}\n              `)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"middle-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \" \", incident.title)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 15\n    }\n  }, incident.description)), incident.status != \"Closed\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-btn\",\n    onClick: () => {\n      setShowModal(true);\n      setIncidentId(incident._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-check-square-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), \"Close\")), /*#__PURE__*/React.createElement(CloseModal, {\n    open: showModal,\n    closeModal: closeModal,\n    acceptModal: () => {\n      acceptModal(incidentId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  })) : \"\"))));\n}\n\nexport default UserIncidents;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/UserIncidents.js"],"names":["React","useState","useContext","useEffect","axios","Redirect","AuthContext","UserContext","CloseModal","UserIncidents","incidents","setIncidents","incidentId","setIncidentId","error","setError","userName","setUserName","showModal","setShowModal","isAuthenticated","setIsAuthenticated","user","setUser","userId","localStorage","getItem","token","method","url","headers","then","res","data","reverse","catch","err","removeIncident","id","alert","msg","filter","incident","_id","console","log","closeModal","acceptModal","name","map","index","status","createdAt","split","title","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./componentsStyles/UserIncidents.css\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport CloseModal from \"./Modal\";\r\n\r\nfunction UserIncidents() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [incidentId, setIncidentId] = useState(\"\");\r\n  const [error, setError] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n  const [user, setUser] = useContext(UserContext);\r\n  const userId = localStorage.getItem(\"user-id\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Request to get the incidents.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/incidents\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => setIncidents(res.data.reverse()))\r\n      .catch((err) => setError(...error, err.data));\r\n  }, [incidents]);\r\n\r\n  // If user isn't login redirect to login\r\n  if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  // Remove Incident(Not Used)\r\n  const removeIncident = (id) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/api/incidents/delete\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n      data: { id },\r\n    })\r\n      .then((res) => {\r\n        alert(res.data.msg);\r\n        setIncidents(incidents.filter((incident) => incident._id != id));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // Close the modal of closing incident.\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Close incident on modal.\r\n  const acceptModal = (id) => {\r\n    setShowModal(false);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/api/incidents/close\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n      data: { id },\r\n    })\r\n      .then((res) => {\r\n        alert(res.data.msg);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <section className=\"user-incidents\">\r\n      <div className=\"container\">\r\n        <h1>{error}</h1>\r\n        <h1>Hello {user.name || localStorage.getItem(\"user-id\")}</h1>\r\n        <h2> Your incidents </h2>\r\n        {incidents.map((incident, index) => (\r\n          <div key={index} className=\"incident\">\r\n            <div className=\"left-side-incident\">\r\n              <h6>SD102546(TO-CHANGE)</h6>\r\n              <h6\r\n                className={`badge ${\r\n                  incident.status == \"Open\" ? \"badge-success\" : \"badge-danger\"\r\n                }`}\r\n              >\r\n                {incident.status}\r\n              </h6>\r\n              <h6>{`${incident.createdAt.split(\"/\")[1]}/${\r\n                incident.createdAt.split(\"/\")[0]\r\n              }/${incident.createdAt.split(\"/\")[2]}\r\n              `}</h6>\r\n            </div>\r\n\r\n            <div className=\"middle-incident\">\r\n              <h5>\r\n                <strong> {incident.title}</strong>\r\n              </h5>\r\n              <p>{incident.description}</p>\r\n            </div>\r\n\r\n            {/* Show \"Close\" button only if the incident isn't closed. */}\r\n            {incident.status != \"Closed\" ? (\r\n              <div className=\"right-side-incident\">\r\n                <div className=\"close-incident\">\r\n                  <button\r\n                    className=\"close-btn\"\r\n                    onClick={() => {\r\n                      setShowModal(true);\r\n                      setIncidentId(incident._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n\r\n                <CloseModal\r\n                  open={showModal}\r\n                  closeModal={closeModal}\r\n                  acceptModal={() => {\r\n                    acceptModal(incidentId);\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default UserIncidents;\r\n"]},"metadata":{},"sourceType":"module"}