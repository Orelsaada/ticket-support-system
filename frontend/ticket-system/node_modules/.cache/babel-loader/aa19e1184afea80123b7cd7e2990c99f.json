{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\AdminPermissions.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport { AuthContext } from \"./AuthContext\";\nimport { Redirect } from \"react-router-dom\";\n\nconst AdminPermissions = () => {\n  const [users, setUsers] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\n  const token = localStorage.getItem(\"token\"); // Request once to get username base on user id.\n  // If the user isn't admin redirect to login.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/auth/user\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => {\n      if (res.data.role != \"Admin\") return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 46\n        }\n      });\n      setUserName(res.data.name);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Get all users\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/permissions/users\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => setUsers(res.data));\n  }, []); // If user isn't login redirect to login\n\n  if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 32\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"permissions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Permissions View\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"User\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, users.map(user => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }\n    }, user.name);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"Role\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"form-control\",\n    id: \"role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }\n  }, \"Add dynamic roles here\"))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nexport default AdminPermissions;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/AdminPermissions.js"],"names":["React","useEffect","useState","useContext","axios","AuthContext","Redirect","AdminPermissions","users","setUsers","userName","setUserName","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","method","url","headers","then","res","data","role","name","catch","err","console","log","map","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AdminPermissions = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Request once to get username base on user id.\r\n  // If the user isn't admin redirect to login.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/auth/user\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.role != \"Admin\") return <Redirect to=\"/\" />;\r\n        setUserName(res.data.name);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  // Get all users\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/permissions/users\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    }).then((res) => setUsers(res.data));\r\n  }, []);\r\n\r\n  // If user isn't login redirect to login\r\n  if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  return (\r\n    <section className=\"permissions\">\r\n      <div className=\"container\">\r\n        <h1>Permissions View</h1>\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"user\">User</label>\r\n            <select className=\"form-control\" id=\"user\">\r\n              {users.map((user) => {\r\n                return <option>{user.name}</option>;\r\n              })}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"role\">Role</label>\r\n            <select className=\"form-control\" id=\"role\">\r\n              <option>Add dynamic roles here</option>\r\n            </select>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminPermissions;\r\n"]},"metadata":{},"sourceType":"module"}