{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\AdminIncidents.js\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./componentsStyles/UserIncidents.css\";\nimport { AuthContext } from \"./AuthContext\";\nimport CloseModal from \"./Modal\";\n\nfunction AdminIncidents() {\n  const [incidents, setIncidents] = useState([]);\n  const [incidentId, setIncidentId] = useState(\"\");\n  const [error, setError] = useState([]);\n  const [userName, setUserName] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\n  const userId = localStorage.getItem(\"user-id\");\n  const token = localStorage.getItem(\"token\"); // Request once to get username base on user id.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/auth/user\",\n      data: userId,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => {\n      setUserName(res.data.name);\n      console.log(res.data.role);\n      if (res.data.role != \"Admin\") return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 46\n        }\n      });\n    }).catch(err => setError(...error, err.data));\n  }, []); // Request to get the incidents.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/incidents\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      }\n    }).then(res => setIncidents(res.data.reverse())).catch(err => setError(...error, err.data));\n  }, [incidents]); // If user isn't login redirect to login\n\n  if (!isAuthenticated) return /*#__PURE__*/React.createElement(Redirect, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }\n  }); // Remove Incident(Not Used)\n\n  const removeIncident = id => {\n    axios({\n      method: \"delete\",\n      url: \"http://localhost:5000/api/incidents/delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      },\n      data: {\n        id\n      }\n    }).then(res => {\n      alert(res.data.msg);\n      setIncidents(incidents.filter(incident => incident._id != id));\n    }).catch(err => console.log(err));\n  }; // Close the modal of closing incident.\n\n\n  const closeModal = () => {\n    setShowModal(false);\n  }; // Close incident on modal.\n\n\n  const acceptModal = id => {\n    setShowModal(false);\n    axios({\n      method: \"post\",\n      url: \"http://localhost:5000/api/incidents/close\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": token\n      },\n      data: {\n        id\n      }\n    }).then(res => {\n      alert(res.data.msg);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: \"user-incidents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, \"Admin Page\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, error), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, \"Hello \", userName), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \" Your incidents \"), incidents.map((incident, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-side-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, \"SD102546(TO-CHANGE)\"), /*#__PURE__*/React.createElement(\"h6\", {\n    className: `badge ${incident.status == \"Open\" ? \"badge-success\" : \"badge-danger\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, incident.status), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, `${incident.createdAt.split(\"/\")[1]}/${incident.createdAt.split(\"/\")[0]}/${incident.createdAt.split(\"/\")[2]}\n              `)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"middle-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, \" \", incident.title)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  }, incident.description)), incident.status != \"Closed\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-side-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close-incident\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-btn\",\n    onClick: () => {\n      setShowModal(true);\n      setIncidentId(incident._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-check-square-o\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }), \"Close\")), /*#__PURE__*/React.createElement(CloseModal, {\n    open: showModal,\n    closeModal: closeModal,\n    acceptModal: () => {\n      acceptModal(incidentId);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })) : \"\"))));\n}\n\nexport default AdminIncidents;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/AdminIncidents.js"],"names":["React","useState","useContext","useEffect","axios","Redirect","AuthContext","CloseModal","AdminIncidents","incidents","setIncidents","incidentId","setIncidentId","error","setError","userName","setUserName","showModal","setShowModal","isAuthenticated","setIsAuthenticated","userId","localStorage","getItem","token","method","url","data","headers","then","res","name","console","log","role","catch","err","reverse","removeIncident","id","alert","msg","filter","incident","_id","closeModal","acceptModal","map","index","status","createdAt","split","title","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./componentsStyles/UserIncidents.css\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport CloseModal from \"./Modal\";\r\n\r\nfunction AdminIncidents() {\r\n  const [incidents, setIncidents] = useState([]);\r\n  const [incidentId, setIncidentId] = useState(\"\");\r\n  const [error, setError] = useState([]);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n  const userId = localStorage.getItem(\"user-id\");\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Request once to get username base on user id.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/auth/user\",\r\n      data: userId,\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => {\r\n        setUserName(res.data.name);\r\n        console.log(res.data.role);\r\n        if (res.data.role != \"Admin\") return <Redirect to=\"/\" />;\r\n      })\r\n      .catch((err) => setError(...error, err.data));\r\n  }, []);\r\n\r\n  // Request to get the incidents.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/incidents\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n    })\r\n      .then((res) => setIncidents(res.data.reverse()))\r\n      .catch((err) => setError(...error, err.data));\r\n  }, [incidents]);\r\n\r\n  // If user isn't login redirect to login\r\n  if (!isAuthenticated) return <Redirect to=\"/\" />;\r\n\r\n  // Remove Incident(Not Used)\r\n  const removeIncident = (id) => {\r\n    axios({\r\n      method: \"delete\",\r\n      url: \"http://localhost:5000/api/incidents/delete\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n      data: { id },\r\n    })\r\n      .then((res) => {\r\n        alert(res.data.msg);\r\n        setIncidents(incidents.filter((incident) => incident._id != id));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  // Close the modal of closing incident.\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  // Close incident on modal.\r\n  const acceptModal = (id) => {\r\n    setShowModal(false);\r\n    axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5000/api/incidents/close\",\r\n      headers: { \"Content-Type\": \"application/json\", \"x-auth-token\": token },\r\n      data: { id },\r\n    })\r\n      .then((res) => {\r\n        alert(res.data.msg);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <section className=\"user-incidents\">\r\n      <h1>Admin Page</h1>\r\n      <div className=\"container\">\r\n        <h1>{error}</h1>\r\n        <h1>Hello {userName}</h1>\r\n        <h2> Your incidents </h2>\r\n        {incidents.map((incident, index) => (\r\n          <div key={index} className=\"incident\">\r\n            <div className=\"left-side-incident\">\r\n              <h6>SD102546(TO-CHANGE)</h6>\r\n              <h6\r\n                className={`badge ${\r\n                  incident.status == \"Open\" ? \"badge-success\" : \"badge-danger\"\r\n                }`}\r\n              >\r\n                {incident.status}\r\n              </h6>\r\n              <h6>{`${incident.createdAt.split(\"/\")[1]}/${\r\n                incident.createdAt.split(\"/\")[0]\r\n              }/${incident.createdAt.split(\"/\")[2]}\r\n              `}</h6>\r\n            </div>\r\n\r\n            <div className=\"middle-incident\">\r\n              <h5>\r\n                <strong> {incident.title}</strong>\r\n              </h5>\r\n              <p>{incident.description}</p>\r\n            </div>\r\n\r\n            {/* Show \"Close\" button only if the incident isn't closed. */}\r\n            {incident.status != \"Closed\" ? (\r\n              <div className=\"right-side-incident\">\r\n                <div className=\"close-incident\">\r\n                  <button\r\n                    className=\"close-btn\"\r\n                    onClick={() => {\r\n                      setShowModal(true);\r\n                      setIncidentId(incident._id);\r\n                    }}\r\n                  >\r\n                    <i className=\"fa fa-check-square-o\" aria-hidden=\"true\"></i>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n\r\n                <CloseModal\r\n                  open={showModal}\r\n                  closeModal={closeModal}\r\n                  acceptModal={() => {\r\n                    acceptModal(incidentId);\r\n                  }}\r\n                />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default AdminIncidents;\r\n"]},"metadata":{},"sourceType":"module"}