{"ast":null,"code":"var _jsxFileName = \"F:\\\\react-small-projects\\\\ticket-support-system\\\\frontend\\\\ticket-system\\\\src\\\\components\\\\Navbar.js\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { NavLink } from \"react-router-dom\";\nimport { AuthContext } from \"./AuthContext\";\nimport { UserContext } from \"./UserContext\";\nimport \"./componentsStyles/Navbar.css\";\n\nconst CustomNavbar = () => {\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\n  const [user, setUser] = useContext(UserContext);\n  const [userName, setUserName] = useState(\"\"); // On change of authentication state - get username.\n\n  useEffect(() => {\n    axios({\n      method: \"get\",\n      url: \"http://localhost:5000/api/auth/user\",\n      data: localStorage.getItem(\"user-id\"),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-auth-token\": localStorage.getItem(\"token\")\n      }\n    }).then(res => setUserName(res.data.name)).catch(err => console.log(err));\n  }, [isAuthenticated]); // Logout functionality\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUserName(\"\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user-id\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"brand-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/my-incidents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Service Manager\")))), isAuthenticated && user.role == \"User\" && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/my-incidents/new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"New Ticket\")), userName && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, userName)), isAuthenticated && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"logout-btn\",\n    onClick: logout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Logout\")))));\n};\n\nexport default CustomNavbar;","map":{"version":3,"sources":["F:/react-small-projects/ticket-support-system/frontend/ticket-system/src/components/Navbar.js"],"names":["React","useContext","useEffect","useState","axios","NavLink","AuthContext","UserContext","CustomNavbar","isAuthenticated","setIsAuthenticated","user","setUser","userName","setUserName","method","url","data","localStorage","getItem","headers","then","res","name","catch","err","console","log","logout","removeItem","role"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,+BAAP;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,UAAU,CAACK,WAAD,CAAxD;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBX,UAAU,CAACM,WAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC,CAHyB,CAKzB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJW,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,qCAFD;AAGJC,MAAAA,IAAI,EAAEC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAHF;AAIJC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,wBAAgBF,YAAY,CAACC,OAAb,CAAqB,OAArB;AAFT;AAJL,KAAD,CAAL,CASGE,IATH,CASSC,GAAD,IAASR,WAAW,CAACQ,GAAG,CAACL,IAAJ,CAASM,IAAV,CAT5B,EAUGC,KAVH,CAUUC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAVlB;AAWD,GAZQ,EAYN,CAAChB,eAAD,CAZM,CAAT,CANyB,CAoBzB;;AACA,QAAMmB,MAAM,GAAG,MAAM;AACnBlB,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACAI,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,YAAY,CAACW,UAAb,CAAwB,OAAxB;AACAX,IAAAA,YAAY,CAACW,UAAb,CAAwB,SAAxB;AACD,GALD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CADF,CADF,CADF,EAUGpB,eAAe,IAAIE,IAAI,CAACmB,IAAL,IAAa,MAAhC,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,mBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAXJ,EAgBGjB,QAAQ,iBACP;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,QAAL,CADF,CAjBJ,EAsBGJ,eAAe,iBACd;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEmB,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CADF,CAvBJ,CADF,CADF;AAoCD,CAhED;;AAkEA,eAAepB,YAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport \"./componentsStyles/Navbar.css\";\r\n\r\nconst CustomNavbar = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useContext(AuthContext);\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  // On change of authentication state - get username.\r\n  useEffect(() => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:5000/api/auth/user\",\r\n      data: localStorage.getItem(\"user-id\"),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"x-auth-token\": localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then((res) => setUserName(res.data.name))\r\n      .catch((err) => console.log(err));\r\n  }, [isAuthenticated]);\r\n\r\n  // Logout functionality\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUserName(\"\");\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user-id\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <div className=\"brand-link\">\r\n            <NavLink to=\"/my-incidents\">\r\n              <h4>Service Manager</h4>\r\n            </NavLink>\r\n          </div>\r\n        </li>\r\n\r\n        {/* New ticket will show only to authenicated user role. */}\r\n        {isAuthenticated && user.role == \"User\" && (\r\n          <li>\r\n            <NavLink to=\"/my-incidents/new\">New Ticket</NavLink>\r\n          </li>\r\n        )}\r\n\r\n        {userName && (\r\n          <div className=\"username\">\r\n            <h6>{userName}</h6>\r\n          </div>\r\n        )}\r\n\r\n        {isAuthenticated && (\r\n          <div className=\"logout\">\r\n            <li>\r\n              <button className=\"logout-btn\" onClick={logout}>\r\n                Logout\r\n              </button>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default CustomNavbar;\r\n"]},"metadata":{},"sourceType":"module"}